---
import { translations, defaultLang } from '../../i18n/translations';
const lang = (Astro.cookies.get('lang')?.value || defaultLang) as 'en' | 'es';
const t = translations[lang];

const pricingPlans = [
  {
    name: t['pricing.starterName'],
    price: '$29',
    period: t['pricing.period'],
    description: t['pricing.starterDesc'],
    features: [
      t['pricing.starterFeature1'],
      t['pricing.starterFeature2'],
      t['pricing.starterFeature3'],
      t['pricing.starterFeature4'],
      t['pricing.starterFeature5'],
    ],
    buttonText: t['pricing.starterBtn'],
    highlight: false
  },
  {
    name: t['pricing.growthName'],
    price: '$79',
    period: t['pricing.period'],
    description: t['pricing.growthDesc'],
    features: [
      t['pricing.growthFeature1'],
      t['pricing.growthFeature2'],
      t['pricing.growthFeature3'],
      t['pricing.growthFeature4'],
      t['pricing.growthFeature5'],
      t['pricing.growthFeature6'],
      t['pricing.growthFeature7'],
    ],
    buttonText: t['pricing.growthBtn'],
    highlight: true
  },
  {
    name: t['pricing.enterpriseName'],
    price: '$199',
    period: t['pricing.period'],
    description: t['pricing.enterpriseDesc'],
    features: [
      t['pricing.enterpriseFeature1'],
      t['pricing.enterpriseFeature2'],
      t['pricing.enterpriseFeature3'],
      t['pricing.enterpriseFeature4'],
      t['pricing.enterpriseFeature5'],
    ],
    buttonText: t['pricing.enterpriseBtn'],
    highlight: false
  }
];
---

<section id="pricing" class="section pricing-section">
  <div class="container">
    <div class="section-header text-center animate-on-scroll">
      <h2 class="section-title">{t['pricing.title']}</h2>
      <p class="section-subtitle">{t['pricing.subtitle']}</p>
    </div>
    
    <div class="pricing-grid">
      {pricingPlans.map((plan) => (
        <div class={`pricing-card ${plan.highlight ? 'highlight' : ''} animate-on-scroll`}>
          <div class="pricing-header">
            <h3 class="pricing-name">{plan.name}</h3>
            <div class="pricing-price">
              {plan.price}
              <span class="pricing-period">{plan.period}</span>
            </div>
            <p class="pricing-description">{plan.description}</p>
          </div>
          
          <ul class="pricing-features">
            {plan.features.map((feature) => (
              <li>{feature}</li>
            ))}
          </ul>
          
          <div class="pricing-button">
            <a href="#cta" class={`btn ${plan.highlight ? 'btn-primary' : 'btn-secondary'} btn-lg`}>
              {plan.buttonText}
            </a>
          </div>
        </div>
      ))}
    </div>
    
    <div class="pricing-guarantee text-center animate-on-scroll">
      <p>{t['pricing.guarantee']}</p>
    </div>
  </div>
</section>

<style>
  .pricing-section {
    background-color: var(--color-teal-900);
    position: relative;
    overflow: hidden;
    padding: var(--spacing-16) 0;
  }
  
  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 1rem;
    width: 100%;
  }
  
  .section-header {
    margin-bottom: var(--spacing-12);
  }
  
  .pricing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
    margin: 0 auto;
    max-width: 1200px;
    padding: 0 1rem;
  }
  
  .pricing-card {
    background-color: var(--color-teal-800);
    border-radius: var(--border-radius-lg);
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    transition: all 0.3s ease;
    border: 1px solid var(--color-teal-700);
  }
  
  .pricing-card.highlight {
    border: 2px solid var(--color-primary);
    transform: translateY(-8px);
    box-shadow: 0 4px 20px rgba(0, 230, 230, 0.1);
  }
  
  .pricing-header {
    text-align: center;
  }
  
  .pricing-name {
    color: var(--color-primary);
    margin-bottom: 0.5rem;
    font-size: 1.5rem;
  }
  
  .pricing-price {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-gray-100);
    margin-bottom: 1rem;
  }
  
  .pricing-period {
    font-size: 1rem;
    color: var(--color-gray-400);
    margin-left: 0.5rem;
  }
  
  .pricing-description {
    color: var(--color-gray-300);
    margin-bottom: 1.5rem;
  }
  
  .pricing-features {
    list-style: none;
    padding: 0;
    margin: 0;
    flex-grow: 1;
  }
  
  .pricing-features li {
    color: var(--color-gray-200);
    margin-bottom: 1rem;
    padding-left: 1.5rem;
    position: relative;
  }
  
  .pricing-features li::before {
    content: "âœ“";
    color: var(--color-primary);
    position: absolute;
    left: 0;
  }
  
  .pricing-button {
    margin-top: auto;
  }
  
  .pricing-button .btn {
    width: 100%;
    justify-content: center;
  }
  
  .pricing-guarantee {
    margin-top: var(--spacing-12);
    color: var(--color-gray-400);
  }
  
  @media (max-width: 1024px) {
    .pricing-grid {
      gap: 1.5rem;
    }
  }
  
  @media (max-width: 768px) {
    .pricing-section {
      padding: var(--spacing-12) 0;
    }
    
    .pricing-grid {
      grid-template-columns: 1fr;
      max-width: 400px;
    }
    
    .pricing-card.highlight {
      transform: none;
    }
  }
</style>